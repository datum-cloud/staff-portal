services:
  staff-portal:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - otel-collector
  grafana:
    image: grafana/grafana:12.1.1
    depends_on:
      - prometheus
      - jaeger
      - otel-collector
    ports:
      - '3002:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dev/docker/grafana/:/etc/grafana/provisioning/
    env_file:
      - ./dev/docker/grafana/.env
  prometheus:
    image: prom/prometheus:v3.5.0
    ports:
      - '9090:9090'
    volumes:
      - ./dev/docker/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/config.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - '16686:16686' # UI
      - '14250:14250' # gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: ['--config=/etc/otel-collector-config.yml']
    volumes:
      - ./dev/docker/otel-collector-config.yml:/etc/otel-collector-config.yml
    environment:
      COLLECTOR_OTLP_ENABLED: true
      LOG_LEVEL: debug
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 8889:8889 # Prometheus exporter metrics
    depends_on:
      - prometheus
      - jaeger
volumes:
  prometheus-data: {}
  grafana-data: {}
